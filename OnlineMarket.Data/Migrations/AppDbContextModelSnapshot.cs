// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OnlineMarket.Data.DbContexts;

#nullable disable

namespace OnlineMarket.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OnlineMarket.Domain.Entities.Carts.Cart", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("OnlineMarket.Domain.Entities.Carts.CartItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CartId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("Sum")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("OnlineMarket.Domain.Entities.Categories.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6843),
                            Description = "Category description 1",
                            IsDelete = false,
                            Name = "FastFood",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6850),
                            Description = "Category description 2",
                            IsDelete = false,
                            Name = "Ichimliklar",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6852),
                            Description = "Category description 3",
                            IsDelete = false,
                            Name = "Kaboblar",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6853),
                            Description = "Category description 4",
                            IsDelete = false,
                            Name = "Suyuq ovqatlar",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6854),
                            Description = "Category description 5",
                            IsDelete = false,
                            Name = "Go'shtli ovqatlar",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6857),
                            Description = "Category description 6",
                            IsDelete = false,
                            Name = "Shashliklar",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6858),
                            Description = "Category description 7",
                            IsDelete = false,
                            Name = "Salatlar",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6859),
                            Description = "Category description 8",
                            IsDelete = false,
                            Name = "Xamirli ovqatlar",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("OnlineMarket.Domain.Entities.Filials.Filial", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Filials");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6902),
                            IsDelete = false,
                            Location = "Novza",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6904),
                            IsDelete = false,
                            Location = "Chilonzor",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6905),
                            IsDelete = false,
                            Location = "Sergeli",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6906),
                            IsDelete = false,
                            Location = "Oq-tepa",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("OnlineMarket.Domain.Entities.Orders.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CartId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("MarketAddress")
                        .HasColumnType("text");

                    b.Property<int>("OrderType")
                        .HasColumnType("integer");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OnlineMarket.Domain.Entities.Orders.OrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision");

                    b.Property<decimal>("Sum")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("OnlineMarket.Domain.Entities.Products.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 1L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6863),
                            Description = "Product Desc",
                            IsDelete = false,
                            Name = "HotDog",
                            Price = 10.0m,
                            StockQuantity = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 1L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6870),
                            Description = "Product Desc2",
                            IsDelete = false,
                            Name = "Gamburger",
                            Price = 15.0m,
                            StockQuantity = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            CategoryId = 1L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6872),
                            Description = "Product Desc3",
                            IsDelete = false,
                            Name = "Lavash",
                            Price = 10.0m,
                            StockQuantity = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            CategoryId = 1L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6874),
                            Description = "Product Desc4",
                            IsDelete = false,
                            Name = "Non burger",
                            Price = 15.0m,
                            StockQuantity = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5L,
                            CategoryId = 2L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6875),
                            Description = "Product Desc5",
                            IsDelete = false,
                            Name = "Coco-Cola",
                            Price = 20.0m,
                            StockQuantity = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6L,
                            CategoryId = 2L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6878),
                            Description = "Product Desc6",
                            IsDelete = false,
                            Name = "Pepsi",
                            Price = 25.0m,
                            StockQuantity = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7L,
                            CategoryId = 2L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6879),
                            Description = "Product Desc7",
                            IsDelete = false,
                            Name = "Fanta",
                            Price = 20.0m,
                            StockQuantity = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8L,
                            CategoryId = 2L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6881),
                            Description = "Product Desc8",
                            IsDelete = false,
                            Name = "Kompot",
                            Price = 25.0m,
                            StockQuantity = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9L,
                            CategoryId = 3L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6882),
                            Description = "Product Desc5",
                            IsDelete = false,
                            Name = "Tovuq kabob",
                            Price = 20.0m,
                            StockQuantity = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10L,
                            CategoryId = 3L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6884),
                            Description = "Product Desc6",
                            IsDelete = false,
                            Name = "Lo'la kabob",
                            Price = 25.0m,
                            StockQuantity = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11L,
                            CategoryId = 3L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6886),
                            Description = "Product Desc5",
                            IsDelete = false,
                            Name = "Mol kabob",
                            Price = 20.0m,
                            StockQuantity = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12L,
                            CategoryId = 3L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6887),
                            Description = "Product Desc6",
                            IsDelete = false,
                            Name = "Qo'y kabob",
                            Price = 28.0m,
                            StockQuantity = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13L,
                            CategoryId = 4L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6889),
                            Description = "Product Desc13",
                            IsDelete = false,
                            Name = "Sho'rva",
                            Price = 30.0m,
                            StockQuantity = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14L,
                            CategoryId = 4L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6890),
                            Description = "Product Desc14",
                            IsDelete = false,
                            Name = "Mastava",
                            Price = 28.0m,
                            StockQuantity = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15L,
                            CategoryId = 5L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6892),
                            Description = "Product Desc13",
                            IsDelete = false,
                            Name = "Qozon kabob",
                            Price = 30.0m,
                            StockQuantity = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16L,
                            CategoryId = 5L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6893),
                            Description = "Product Desc14",
                            IsDelete = false,
                            Name = "Tovuq go'shti",
                            Price = 28.0m,
                            StockQuantity = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17L,
                            CategoryId = 6L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6895),
                            Description = "Product Desc13",
                            IsDelete = false,
                            Name = "Qiyma shashlik",
                            Price = 30.0m,
                            StockQuantity = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18L,
                            CategoryId = 6L,
                            CreatedAt = new DateTime(2023, 12, 13, 8, 16, 58, 517, DateTimeKind.Utc).AddTicks(6897),
                            Description = "Product Desc14",
                            IsDelete = false,
                            Name = "Burda shashlik",
                            Price = 18.0m,
                            StockQuantity = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("OnlineMarket.Domain.Entities.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserRole")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OnlineMarket.Domain.Entities.Carts.Cart", b =>
                {
                    b.HasOne("OnlineMarket.Domain.Entities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineMarket.Domain.Entities.Carts.CartItem", b =>
                {
                    b.HasOne("OnlineMarket.Domain.Entities.Carts.Cart", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId");

                    b.HasOne("OnlineMarket.Domain.Entities.Products.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnlineMarket.Domain.Entities.Orders.Order", b =>
                {
                    b.HasOne("OnlineMarket.Domain.Entities.Carts.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId");

                    b.HasOne("OnlineMarket.Domain.Entities.Users.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineMarket.Domain.Entities.Orders.OrderItem", b =>
                {
                    b.HasOne("OnlineMarket.Domain.Entities.Orders.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OnlineMarket.Domain.Entities.Products.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnlineMarket.Domain.Entities.Products.Product", b =>
                {
                    b.HasOne("OnlineMarket.Domain.Entities.Categories.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OnlineMarket.Domain.Entities.Carts.Cart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("OnlineMarket.Domain.Entities.Categories.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("OnlineMarket.Domain.Entities.Orders.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("OnlineMarket.Domain.Entities.Users.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
